@phdthesis{Silano2020PhDThesis,
  author       = {Giuseppe Silano},
  title        = {Software-in-the-loop Methodologies for the Analysis and Control Design of Small UAV Systems},
  school       = {University of Sannio in Benevento},
  year         = 2020,
  month        = 7,
	group			   = {phdthesis},
	abstract     = {Aerial robotics is a fast-growing field of robotics and in particular multirotor aircraft, like quad-rotors, are rapidly increasing in popularity also out of the scientific community. Thanks to their hovering and Vertical Take-Off and Landing (VTOL) capabilities and the capacity to perform tasks with complete autonomy, they are now a standard platform for numerous military and civilian applications, e.g., inspections of power lines, bridges and pipelines, soil and field analysis, crop monitoring. Among different advantages offered by such class of Unmanned Aerial Vehicles (UAVs), there is the capacity to perform tasks with complete autonomy thus minimizing costs and risks involved with the direct intervention of human operators. However, designing autopilots for UAVs is a challenging task, which involves multiple interconnected aspects. Numerous researchers are currently addressing the problem of designing autonomous guidance and navigation systems as well as control systems for multi-rotor vehicles. Therefore, having tools able to show what it happens when some new applications are going to be developed in unknown or critical situations is more and more important. Simulation is one of such helpful tools, widely used in robotics, enabling not only to verify the components integration and to evaluate their behavior under different circumstances but also to simplify the development and validation processes. Furthermore, simulation is cheaper than experiments with real robots, in terms of time and human resources. It can also provide more flexibility, by allowing testing under conditions that would be unfeasible otherwise: a simulated environment can be significantly more complex and larger than a lab environment, and meanwhile ensure a perfect repeatability. Moreover, it makes possible simulating multiple robots when the hardware may not be available. Finally, bugs and mistakes in simulation cost virtually nothing: it is possible to crash a vehicle several times and thereby getting a better understanding of implemented methods under various conditions. Different solutions, typically based on dedicated robotic simulators such as Gazebo, V-REP, AirSim, MORSE, are available to this purpose. They employ recent advances in computation and computer graphics in order to simulate physical phenomena (gravity, magnetism, atmospheric conditions) and perception (e.g., providing sensor models) in such a way that the environment realistically reflects the actual world. Definitely, it comes out that software platforms able to test algorithms for UAVs moving in a simulated 3D environment are becoming an indispensable part of the design phase. The aim of this thesis is to show the role and the effectiveness of robotics simulators in flight control system design for multi-rotor aircraft (especially, quad-rotors) proposing a Software-in-the-loop (SIL) methodology. In particular it will be explained, by using rather complex examples, how a SIL approach allows to detect and to manage instabilities that otherwise might not arise when considering only MATLAB/Simulink simulations. On the other hand such instabilities may not be just related to the complexity, accuracy or detailed modeling of the simulated plant, but rather they may appear due to peculiar features of the final realization and, in particular, the software that will implement the control strategy. Indeed, aspects like synchronization, overflow, tasks communication, are all managed by libraries or tools available during the control design phase and yet they are specific of the final code implementation. From such perspective, SIL simulation has to be considered a valuable tool for discovering, in an earlier phase of the usual V-model process, those issues that Model-in-the-loop (MIL) simulation does not necessarily detect. At the same time, a SIL simulation, obtained by using realistic and detailed simulators, gives the opportunity of validating in an easy way the effects of modifying the control strategy for complex missions. That represents quite often the easiest way to tune the flight control system and to check its validity. Although advantages of such methodology are reasonable for the scientific community from a very general viewpoint, illustrative case studies can be of interest in particular if declined to the specific application, and when the code is provided as open-source for scientific and educational. activities. Thus, the thesis aims to give the reader practical and concrete evidence of the above considerations by looking at an up-to-date control application, i.e., the flight control system of small quad-rotors and rather complex platforms, providing a complete SIL simulation methodology.}
}

@INPROCEEDINGS{Silano2019AutomaticaIT,
	author    	 = {G. Silano and P. Oppido and L. Iannelli},
	booktitle 	 = {S.I.D.R.A. (Italian Society of Automatic Control), National Meeting},
	title			   = {Software-in-the-loop simulation for improving flight control system design: a quadrotor case study},
	year			   = {2019},
	group			   = {posters},
	doi				   = {10.13140/RG.2.2.31583.61603},
	month		     = {9},
	preprint     = {publications/automaticaIT_2019.pdf},
  code         = {http://github.com/gsilano/BebopS},
	note         = {Ancona, Italy},
	abstract     = {Simulation is a standard approach used for designing complex systems like the flight controller in multi-rotor vehicles. In this paper we illustrate how the software-in-the-loop (SIL) methodology allows to detect and manage instabilities of a quadrotor control system that otherwise might not arise when considering only Matlab/Simulink simulations discovering issues that a model-in-the-loop (MIL) simulation does not necessarily detect. The paper aims to give the reader a practical and concrete evidence of such considerations through the case study of a micro quadrotor.},
}

@INPROCEEDINGS{Silano2020MBZIRC,
	author    	 = {A. Afifi and G. Silano and M. Tognon and G. Oriolo and A. Franchi},
	booktitle 	 = {MBZIRC Symposium 2020, the First International Robotic Challenges Symposium},
	title			   = {A General Control Architecture for Visual Servoing and Physical Interaction Tasks for Aerial Vehicles},
	year			   = {2020},
	group			   = {conferences},
	month			   = {2},
	status       = {To be presented},
	note         = {Abu Dhabi, United Arab Emirates},
	abstract     = {This paper presents a general control architecture for using fully actuated aerial robots in tasks that require both visual servoing and physical interaction with the environment. We make use of a novel paradigm for physical interaction in aerial robotics called "The Flying End-Effector" and integrate it with a hybrid visual servoing scheme. The proposed control architecture allows a fully actuated aerial robot to be visually driven to a goal using an on-board camera while achieving bounded force exchange with the environment without the need for a force/torque sensor. The hybrid visual servoing scheme is integrated with an admittance filter, while a wrench observer is used to get an estimate for the interaction wrench. We intend to make use of this control architecture for pick and place operations within the Mohamed Bin Zayed International Robotics Competition (MBZIRC). In particular, the proposed framework will be used to build a wall composed by different bricks. The overall control scheme is validated experimentally on a picking task. The experiments show the viability of the proposed control architecture and provide insights on the present limitations.},
}

@INPROCEEDINGS{Silano2019SMC,
	author    	 = {G. Silano and P. Oppido and L. Iannelli},
	booktitle 	 = {2019 IEEE International Conference on Systems, Man, and Cybernetics (SMC)},
	title			   = {Software-in-the-loop simulation for improving flight control system design: a quadrotor case study},
	year			   = {2019},
	pages			   = {466-471},
	group			   = {conferences},
	doi				   = {10.1109/SMC.2019.8914154},
	month			   = {10},
	preprint     = {publications/smc19.pdf},
  code         = {http://github.com/gsilano/BebopS},
	link         = {https://ieeexplore.ieee.org/document/8914154},
	note         = {Bari, Italy},
	abstract     = {Simulation is a standard approach used for designing complex systems like the flight controller in multi-rotor vehicles. In this paper we illustrate how the software-in-the-loop (SIL) methodology allows to detect and manage instabilities of a quadrotor control system that otherwise might not arise when considering only Matlab/Simulink simulations. The use of the SIL technique allows to understand the behavior of the flight control system by comparing and evaluating different scenarios, with a details level quite close to reality. At the same time, it is possible to discover issues that a model-in-the-loop (MIL) simulation does not necessarily detect, even if carried out through a multi-physics co-simulation approach. The paper aims to give the reader a practical and concrete evidence of such considerations through the case study of a micro quadrotor.},
}

@ARTICLE{Silano2019MATFly,
	author       = {G. Silano and L. Iannelli},
	title        = {MAT-Fly: an educational platform for simulating Unmanned Aerial Vehicles aimed to detect and track moving objects},
	group	       = {journals},
	year         = 2020,
	month        = 1,
	status       = {Under Review},
	doi			     = {10.13140/RG.2.2.14878.43849},
	preprint     = {publications/MAT-Fly_ArxivV1.pdf},
	link         = {https://arxiv.org/abs/1904.00378},
	code         = {https://github.com/gsilano/MAT-Fly},
	abstract     = {The main motivation of this work is to propose a simulation approach for a specific task within the UAV (Unmanned Aerial Vehicle) field, i.e., the visual detection and tracking of arbitrary moving objects. In particular, it is described MAT-Fly, a numerical simulation platform for multi-rotors aircrafts characterized by ease of use and control development. The platform is based on Matlab and the MathWorks Virtual Reality (VR) and Computer Vision System (CVS) toolboxes that work together to simulate the behavior of a drone in a 3D environment while tracking a car that moves along a non trivial path. The VR toolbox has been chosen due to the familiarity that students have with Matlab and because it allows to move the attention to the classifier, the tracker, the reference generator and the trajectory tracking control thanks to its simple structure. The overall architecture is quite modular so that each block can be easily replaced with others by simplifying the development phase and by allowing to add even more functionalities. The numerical simulator makes easy and quick to insert and to remove flight control system components, testing and comparing different plans, both for indoor and outdoor scenarios, when computer vision algorithms are in the loop. In an automatic way, the simulator is able to acquire frames from the virtual world, to search for one or more objects on which it has been trained during the learning phase, and to track the target position applying a trajectory control, addressing in that way the image-based visual servoing problems. Some simple testbeds have been presented in order to show the effectiveness and robustness of the approach as well as the platform works. We released the software as open-source, making it available for educational activities.},
}

@INBOOK{Silano2019ROSVolume4,
  author       = {G. Silano and L. Iannelli},
  editor       = {A. Koubaa},
  title        = {Robot Operating System (ROS): The Complete Reference (Volume 4)},
  chapter      = {CrazyS: a software-in-the-loop simulation platform for the Crazyflie 2.0 nano-quadcopter},
  publisher    = {Springer International Publishing},
  group	       = {book-chapters},
	address      = {Cham},
  pages        = {81--115},
	isbn         = {978-3-030-20190-6},
  doi          = {10.1007/978-3-030-20190-6_4},
	preprint     = {publications/rosChapter19.pdf},
  link         = {https://doi.org/10.1007/978-3-030-20190-6_4},
  year         = 2020,
  code         = {http://github.com/gsilano/CrazyS},
  abstract     = {This chapter proposes a typical use case dealing with the physical simulation of autonomous robots (specifically, quadrotors) and their interfacing through ROS (Robot Operating System). In particular, we propose CrazyS, an extension of the ROS package RotorS, aimed to modeling, developing and integrating the Crazyflie 2.0 nano-quadcopter in the physics based simulation environment Gazebo. Such simulation platform allows to understand quickly the behavior of the flight control system by comparing and evaluating different indoor and outdoor scenarios, with a details level quite close to reality. The proposed extension, running on Kinetic Kame ROS version but fully compatible with the Indigo Igloo one, expands the RotorS capabilities by considering the Crazyflie 2.0 physical model, its flight control system and the Crazyflie's on-board IMU, as well. A simple case study has been considered in order to show how the package works and how the dynamical model interacts with the control architecture of the quadcopter. The contribution can be also considered as a reference guide for expanding the RotorS functionalities in the UAVs field, by facilitating the integration of new aircrafts. We released the software as open-source code, thus making it available for scientific and educational activities.},
}

@INPROCEEDINGS{Silano2018MetroAgriFor,
	author    	 = {P. Daponte and De Vito, L. and L. Glielmo and L. Iannelli and D. Liuzza and F. Picariello and G. Silano},
	booktitle 	 = {2018 1st Workshop - Metrology for Agriculture and Foresty (MetroAgriFor)},
	title			   = {A review on the use of drones for precision agriculture},
	year			   = {2018},
	pages			   = {1-11},
	group			   = {conferences},
  doi				   = {10.1088/1755-1315/275/1/012022},
	ISSN			   = {1755--1315},
	month			   = {10},
	preprint     = {publications/metroagrifor18.pdf},
  link         = {https://iopscience.iop.org/article/10.1088/1755-1315/275/1/012022},
	note         = {Ancona, Italy},
	abstract     = {In recent years, there has been a strong activity in the so-called precision agriculture, particularly the monitoring aspect, not only to improve productivity, but also to meet demand of a growing population. At a large scale, precise monitoring of cultivated fields is a quite challenging task. Therefore, this paper aims to propose a survey on techniques, applied to precision agriculture monitoring, through the use of drones equipped with multispectral, thermal and visible cameras. For each application, the main limitations are highlighted and the parameters to be considered before to perform a flight are reported.},
}

@INPROCEEDINGS{Silano2018MED,
	author    	 = {G. Silano and E. Aucone and L. Iannelli},
	booktitle 	 = {2018 26th Mediterranean Conference on Control and Automation (MED)},
	title			   = {CrazyS: A Software-In-The-Loop Platform for the Crazyflie 2.0 Nano-Quadcopter},
	year			   = {2018},
	pages			   = {352--357},
	group			   = {conferences},
	doi				   = {10.1109/MED.2018.8442759},
	ISSN			   = {2473-3504},
	month			   = {6},
	preprint     = {publications/med18.pdf},
  link         = {https://ieeexplore.ieee.org/document/8442759},
  code         = {http://github.com/gsilano/CrazyS},
	note         = {Zadar, Croatia},
	abstract     = {In this paper we propose CrazyS, an extension of the ROS (Robot Operating System) package RotorS, aimed to modeling, developing and integrating the Crazyflie 2.0 nano-quadcopter in the physics based simulation environment Gazebo. Such simulation platform allows to understand quickly the behavior of the flight control system by comparing and evaluating different indoor and outdoor scenarios, with a details level quite close to reality. The proposed extension expands RotorS capabilities by considering the Crazyflie 2.0 physical model and its flight control system, as well. A simple case study  has been considered in order to show how the package works. The use of open-source software makes the platform available for scientific and educational activities.},
}

@INPROCEEDINGS{Silano2017AutomaticaIT,
	author    	 = {G. Silano and L. Iannelli},
	booktitle 	 = {S.I.D.R.A. (Italian Society of Automatic Control), National Meeting},
	title			   = {An educational simulation platform for Unmanned Aerial Vehicles aimed to detect and track moving objects},
	year			   = {2017},
	group			   = {posters},
	doi				   = {10.13140/RG.2.2.14878.43849},
	month			   = {9},
	preprint     = {publications/automaticaIT_2017.pdf},
  code         = {http://github.com/gsilano/MAT-Fly},
	note         = {Milan, Italy},
	abstract     = {The main motivation of this work is to show, for educational purposes, that the visual based object tracking problem can be illustrated through the simulation-in-the-loop approach: by using the MathWorks Virtual Reality Toolbox together with Matlab, it is possible to simulate the behavior of a drone in a 3D environment when detection and control algorithms are run. Matlab VR is used due to the familiarity that students have with. In this way the attention can be moved to the classifier, the references generator and the trajectory tracking control. Each block is decoupled and independent, so it can be easily replaced with others thus simplifying the development phase.},
}

@INPROCEEDINGS{Silano2016CCA,
	author			= {G. Silano and L. Iannelli},
	booktitle		= {2016 IEEE Conference on Control Applications (CCA)},
	title			  = {An educational simulation platform for GPS-denied unmanned Aerial Vehicles aimed to the detection and tracking of moving objects},
	year			  = {2016},
	pages			  = {1018-1023},
	group			  = {conferences},
	doi				  = {10.1109/CCA.2016.7587947},
	month			  = {9},
	preprint 		= {publications/cca16.pdf},
  link 			  = {https://ieeexplore.ieee.org/document/7587947},
	note        = {Buenos Aires, Argentina},
	abstract    = {The main motivation of this work is to show, for educational purposes, that the visual based object tracking problem can be illustrated through the simulation-in-the-loop approach: by using the MathWorks Virtual Reality Toolbox together with Matlab, it is possible to simulate the behavior of a drone in a 3D environment when detection and control algorithms are run. Matlab VR is used due to the familiarity that students have with. In this way the attention can be moved to the classifier, the references generator and the trajectory tracking control. Each block is decoupled and independent, so it can be easily replaced with others thus simplifying the development phase.},
}
