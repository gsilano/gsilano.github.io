@INPROCEEDINGS{Silano2021Eusipco,
 author       = {{Bonilla Licea}, D. and {Silano}, G. and {Mounir}, G. and {Saska}, M.},
 booktitle    = {29th European Signal Processing Conference (EUSIPCO)},
 title        = {{Optimum Trajectory Planning for Multi-Rotor UAV Relays with Tilt and Antenna Orientation Variations}},
 year	      = {2021},
 group	      = {conferences},
 month	      = {9},
 preprint     = {publications/EUSIPCO_2021.pdf},
 note         = {Dublin, Ireland},
 abstract     = {Multi-rotor Unmanned Aerial Vehicles (UAVs) need to tilt in order to move; this modifies the UAV's antenna orientation. We consider the scenario where a multi-rotor UAV serves as a communication relay between a Base Station (BS) and another UAV. We propose a framework to generate feasible trajectories for the multi-rotor UAV relay while considering its motion dynamics and the motion-induced changes of the antenna orientation. The UAV relayâ€™s trajectory is optimized to maximize the end-to-end number of bits transmitted. Numerical simulations in MATLAB and Gazebo show the benefits of accounting for the antenna orientation variations due to the UAV tilt.}
}

@INPROCEEDINGS{Silano2021ICUAS_II,
 author       = {{Terlizzi}, M. and {Silano}, G. and {Russo}, L. and {Aatif}, M. and {Basiri}, A. and {Mariani}, V. and {Iannelli}, L. and {Glielmo}, L.},
 booktitle    = {2021 International Conference on Unmanned Aircraft Systems (ICUAS)},
 title	      = {{A Vision-Based Algorithm for a Path Following Problem}},
 year	      = {2021},
 group	      = {conferences},
 month	      = {6},
 pages	      = {1630--1635},
 preprint     = {publications/ICUAS21_Silano_II.pdf},
 note         = {Athens, Greece},
 code         = {https://www.mathworks.com/matlabcentral/fileexchange/91475-vision-based-path-following-algorithm?s_tid=srchtitle},
 abstract     = {A novel prize-winner algorithm designed for a path following problem within the Unmanned Aerial Vehicle (UAV) field is presented in this paper. The proposed approach exploits the advantages offered by the pure pursuing algorithm to set up an intuitive and simple control framework. A path fora quad-rotor UAV is obtained by using downward facing camera images implementing an Image-Based Visual Servoing (IBVS) approach. Numerical simulations in MATLAB together with the MathWorks Virtual Reality (VR) toolbox demonstrate the validity and the effectiveness of the proposed solution. The code is released as open-source making it possible to go through any part of the system and to replicate the obtained results.}
}

@INPROCEEDINGS{Silano2021ICUAS_I,
 author      = {{Silano}, G. and {Bednar}, J. and {Nascimento}, T. and {Capitan}, J. and {Saska}, M. and {Ollero}, A.},
 booktitle   = {2021 International Conference on Unmanned Aircraft Systems (ICUAS)},
 title	     = {{A Multi-Layer Software Architecture for Aerial Cognitive Multi-Robot Systems in Power Line Inspection Tasks}},
 year	     = {2021},
 group	     = {conferences},
 pages	     = {1624--1629},
 month	     = {6},
 preprint    = {publications/ICUAS21_Silano_I.pdf},
 note        = {Athens, Greece},
 code        = {https://github.com/ctu-mrs/icuas_2021_sw_architecture_acws},
 abstract    = {This paper presents a multi-layer software architecture to perform cooperative missions with a fleet of quadrotors providing support in electrical power line inspection operations. The proposed software framework guarantees the compliance with safety requirements between drones and human workers while ensuring that the mission is carried out successfully. Besides, cognitive capabilities are integrated in the multi-vehicle system in order to reply to unforeseen events and external disturbances. The feasibility and effectiveness of the proposed architecture are demonstrated by means of realistic simulations.}
}

@ARTICLE{Silano2021MATFly,
 author      = {{Silano}, G. and {Iannelli}, L.},
 title       = {{MAT-Fly: An Educational Platform for Simulating Unmanned Aerial Vehicles Aimed to Detect and Track Moving Objects}},
 group	     = {journals},
 year        = {2021},
 volume      = {9},
 pages       = {39333--39343},
 status      = {Impact factor: 3.745.},
 code        = {https://github.com/gsilano/MAT-Fly},
 preprint    = {publications/MAT-Fly.pdf},
 doi         = {10.1109/ACCESS.2021.3064758},
 month	     = {3},
 journal     = {IEEE Access},
 link        = {https://ieeexplore.ieee.org/document/9373417},
 abstract    = {The main motivation of this work is to propose a simulation approach for a specific task within the Unmanned Aerial Vehicle (UAV) field, i.e., the visual detection and tracking of arbitrary moving objects. In particular, it is described MAT-Fly, a numerical simulation platform for multi-rotor aircraft characterized by the ease of use and control development. The platform is based on Matlab and the MathWorks Virtual Reality (VR) and Computer Vision System (CVS) toolboxes that work together to simulate the behavior of a quad-rotor while tracking a car that moves along a nontrivial path. The VR toolbox has been chosen due to the familiarity that students have with Matlab and because it does not require a notable effort by the user for the learning and development phase thanks to its simple structure. The overall architecture is quite modular so that each block can be easily replaced with others simplifying the code reuse and the platform customization. Some simple testbeds are presented to show the validity of the approach and how the platform works. The simulator is released as open-source, making it possible to go through any part of the system, and available for educational purposes.}
}

@ARTICLE{Silano2021RAL,
 author       = {{Silano}, G. and {Baca}, T. and {Penicka}, R. and {Liuzza}, D. and {Saska}, M.},
 title        = {{Power Line Inspection Tasks with Multi-Aerial Robot Systems via Signal Temporal Logic Specifications}},
 group	      = {journals},
 year         = {2021},
 volume       = {6},
 number       = {2},
 pages        = {4169--4176},
 status       = {Impact factor: 3.608. Accepted also to ICRA'21},
 preprint     = {publications/ral21.pdf},
 doi	      = {10.1109/LRA.2021.3068114},
 month	      = {4},
 journal      = {IEEE Robotics and Automation Letters},
 link         = {https://ieeexplore.ieee.org/document/9384182},
 abstract     = {A framework for computing feasible and constrained trajectories for a fleet of quad-rotors leveraging on Signal Temporal Logic (STL) specifications for power line inspection tasks is proposed in this paper. The planner allows the formulation of complex missions that avoid obstacles and maintain a safe distance between drones while performing the planned mission. An optimization problem is set to generate optimal strategies that satisfy these specifications and also take vehicle
constraints into account. Further, an event-triggered replanner is proposed to reply to unforeseen events and external disturbances. An energy minimization term is also considered to implicitly save quad-rotors battery life while carrying out the mission. Numerical simulations in MATLAB and experimental results show the validity and the effectiveness of the proposed approach, and demonstrate its applicability in real-world scenarios.}
}

@INPROCEEDINGS{Silano2020SIDRA,
 author      = {{Silano}, G. and {Liuzza}, D. and {Iannelli}, L. and {Saska}, M.},
 booktitle   = {SIDRA (Italian Society of Automatic Control), National Meeting},
 title	     = {{A framework for power line inspection tasks with multi-robot systems from signal temporal logic specifications}},
 year	     = {2020},
 group	     = {workshops},
 month	     = {9},
 preprint    = {publications/automaticaIT_2020.pdf},
 note        = {Cagliari, Italy},
 abstract    = {Inspection of power line infrastructures must be periodically conducted by electric companies in order to ensure reliable electric power distribution. Research efforts are focused on automating the power line inspection process by looking for strategies that satisfy different requirements expressed in terms of potential damage and faults detection. This problem comes up with the need of safe planning and control techniques for autonomous robots to perform visual inspection tasks. Such an application becomes even more interesting and of critical importance when considering a multi-robot extension. In this paper, we propose to compute feasible and constrained trajectories for a fleet of quad-rotors leveraging on Signal Temporal Logic (STL) specifications. The planner allows to formulate rather complex missions avoiding obstacles and forbidden areas along the path. Simulations results achieved in MATLAB show the effectiveness of the proposed approach leading the way to experimental tests on the hardware.}
}

@phdthesis{Silano2020PhDThesis,
 author      = {Giuseppe Silano},
 title       = {{Software-in-the-loop Methodologies for the Analysis and Control Design of Small UAV Systems}},
 school      = {University of Sannio in Benevento},
 year        = {2020},
 month       = {7},
 link        = {https://www.researchgate.net/publication/345767635_Giuseppe_Silano's_PhD_Thesis_-_Advisor_Prof_Dr_Luigi_Iannelli},
 group	     = {phdthesis},
 abstract    = {Aerial robotics is a fast-growing field of robotics and in particular multirotor aircraft, like quad-rotors, are rapidly increasing in popularity also out of the scientific community. Thanks to their hovering and Vertical Take-Off and Landing (VTOL) capabilities and the capacity to perform tasks with complete autonomy, they are now a standard platform for numerous military and civilian applications, e.g., inspections of power lines, bridges and pipelines, soil and field analysis, crop monitoring. Among different advantages offered by such class of Unmanned Aerial Vehicles (UAVs), there is the capacity to perform tasks with complete autonomy thus minimizing costs and risks involved with the direct intervention of human operators. However, designing autopilots for UAVs is a challenging task, which involves multiple interconnected aspects. Numerous researchers are currently addressing the problem of designing autonomous guidance and navigation systems as well as control systems for multi-rotor vehicles. Therefore, having tools able to show what it happens when some new applications are going to be developed in unknown or critical situations is more and more important. Simulation is one of such helpful tools, widely used in robotics, enabling not only to verify the components integration and to evaluate their behavior under different circumstances but also to simplify the development and validation processes. Furthermore, simulation is cheaper than experiments with real robots, in terms of time and human resources. It can also provide more flexibility, by allowing testing under conditions that would be unfeasible otherwise: a simulated environment can be significantly more complex and larger than a lab environment, and meanwhile ensure a perfect repeatability. Moreover, it makes possible simulating multiple robots when the hardware may not be available. Finally, bugs and mistakes in simulation cost virtually nothing: it is possible to crash a vehicle several times and thereby getting a better understanding of implemented methods under various conditions. Different solutions, typically based on dedicated robotic simulators such as Gazebo, V-REP, AirSim, MORSE, are available to this purpose. They employ recent advances in computation and computer graphics in order to simulate physical phenomena (gravity, magnetism, atmospheric conditions) and perception (e.g., providing sensor models) in such a way that the environment realistically reflects the actual world. Definitely, it comes out that software platforms able to test algorithms for UAVs moving in a simulated 3D environment are becoming an indispensable part of the design phase. The aim of this thesis is to show the role and the effectiveness of robotics simulators in flight control system design for multi-rotor aircraft (especially, quad-rotors) proposing a Software-in-the-loop (SIL) methodology. In particular it will be explained, by using rather complex examples, how a SIL approach allows to detect and to manage instabilities that otherwise might not arise when considering only MATLAB/Simulink simulations. On the other hand such instabilities may not be just related to the complexity, accuracy or detailed modeling of the simulated plant, but rather they may appear due to peculiar features of the final realization and, in particular, the software that will implement the control strategy. Indeed, aspects like synchronization, overflow, tasks communication, are all managed by libraries or tools available during the control design phase and yet they are specific of the final code implementation. From such perspective, SIL simulation has to be considered a valuable tool for discovering, in an earlier phase of the usual V-model process, those issues that Model-in-the-loop (MIL) simulation does not necessarily detect. At the same time, a SIL simulation, obtained by using realistic and detailed simulators, gives the opportunity of validating in an easy way the effects of modifying the control strategy for complex missions. That represents quite often the easiest way to tune the flight control system and to check its validity. Although advantages of such methodology are reasonable for the scientific community from a very general viewpoint, illustrative case studies can be of interest in particular if declined to the specific application, and when the code is provided as open-source for scientific and educational. activities. Thus, the thesis aims to give the reader practical and concrete evidence of the above considerations by looking at an up-to-date control application, i.e., the flight control system of small quad-rotors and rather complex platforms, providing a complete SIL simulation methodology.}
}

@INPROCEEDINGS{Silano2019SIDRA,
 author      = {G. Silano and P. Oppido and L. Iannelli},
 booktitle   = {SIDRA (Italian Society of Automatic Control), National Meeting},
 title       = {{Software-in-the-loop simulation for improving flight control system design: a quadrotor case study}},
 year        = {2019},
 group       = {posters},
 doi	     = {10.13140/RG.2.2.31583.61603},
 month       = {9},
 preprint    = {publications/automaticaIT_2019.pdf},
 code        = {http://github.com/gsilano/BebopS},
 note        = {Ancona, Italy},
 abstract    = {Simulation is a standard approach used for designing complex systems like the flight controller in multi-rotor vehicles. In this paper we illustrate how the software-in-the-loop (SIL) methodology allows to detect and manage instabilities of a quadrotor control system that otherwise might not arise when considering only Matlab/Simulink simulations discovering issues that a model-in-the-loop (MIL) simulation does not necessarily detect. The paper aims to give the reader a practical and concrete evidence of such considerations through the case study of a micro quadrotor.}
}

@INPROCEEDINGS{Silano2020MBZIRC,
 author      = {A. Afifi and G. Silano and M. Tognon and G. Oriolo and A. Franchi},
 booktitle   = {MBZIRC Symposium 2020, the First International Robotic Challenges Symposium},
 title       = {{A General Control Architecture for Visual Servoing and Physical Interaction Tasks for Aerial Vehicles}},
 year        = {2020},
 group       = {conferences},
 month	     = {2},
 note        = {Abu Dhabi, United Arab Emirates},
 abstract    = {This paper presents a general control architecture for using fully actuated aerial robots in tasks that require both visual servoing and physical interaction with the environment. We make use of a novel paradigm for physical interaction in aerial robotics called "The Flying End-Effector" and integrate it with a hybrid visual servoing scheme. The proposed control architecture allows a fully actuated aerial robot to be visually driven to a goal using an on-board camera while achieving bounded force exchange with the environment without the need for a force/torque sensor. The hybrid visual servoing scheme is integrated with an admittance filter, while a wrench observer is used to get an estimate for the interaction wrench. We intend to make use of this control architecture for pick and place operations within the Mohamed Bin Zayed International Robotics Competition (MBZIRC). In particular, the proposed framework will be used to build a wall composed by different bricks. The overall control scheme is validated experimentally on a picking task. The experiments show the viability of the proposed control architecture and provide insights on the present limitations.}
}

@INPROCEEDINGS{Silano2019SMC,
 author      = {G. Silano and P. Oppido and L. Iannelli},
 booktitle   = {2019 IEEE International Conference on Systems, Man, and Cybernetics (SMC)},
 title       = {{Software-in-the-loop simulation for improving flight control system design: a quadrotor case study}},
 year        = {2019},
 pages       = {466-471},
 group       = {conferences},
 doi         = {10.1109/SMC.2019.8914154},
 month	     = {10},
 preprint    = {publications/smc19.pdf},
 code        = {http://github.com/gsilano/BebopS},
 link        = {https://ieeexplore.ieee.org/document/8914154},
 note        = {Bari, Italy},
abstract     = {Simulation is a standard approach used for designing complex systems like the flight controller in multi-rotor vehicles. In this paper we illustrate how the software-in-the-loop (SIL) methodology allows to detect and manage instabilities of a quadrotor control system that otherwise might not arise when considering only Matlab/Simulink simulations. The use of the SIL technique allows to understand the behavior of the flight control system by comparing and evaluating different scenarios, with a details level quite close to reality. At the same time, it is possible to discover issues that a model-in-the-loop (MIL) simulation does not necessarily detect, even if carried out through a multi-physics co-simulation approach. The paper aims to give the reader a practical and concrete evidence of such considerations through the case study of a micro quadrotor.}
}

@INBOOK{Silano2019ROSVolume4,
 author      = {G. Silano and L. Iannelli},
 editor      = {A. Koubaa},
 title       = {Robot Operating System (ROS): The Complete Reference (Volume 4)},
 chapter     = {{CrazyS: a software-in-the-loop simulation platform for the Crazyflie 2.0 nano-quadcopter}},
 publisher   = {Springer International Publishing},
 group	     = {book-chapters},
 address     = {Cham},
 pages       = {81--115},
 isbn        = {978-3-030-20190-6},
 doi         = {10.1007/978-3-030-20190-6_4},
 preprint    = {publications/rosChapter19.pdf},
 link        = {https://doi.org/10.1007/978-3-030-20190-6_4},
 year        = 2020,
 code        = {http://github.com/gsilano/CrazyS},
 abstract    = {This chapter proposes a typical use case dealing with the physical simulation of autonomous robots (specifically, quadrotors) and their interfacing through ROS (Robot Operating System). In particular, we propose CrazyS, an extension of the ROS package RotorS, aimed to modeling, developing and integrating the Crazyflie 2.0 nano-quadcopter in the physics based simulation environment Gazebo. Such simulation platform allows to understand quickly the behavior of the flight control system by comparing and evaluating different indoor and outdoor scenarios, with a details level quite close to reality. The proposed extension, running on Kinetic Kame ROS version but fully compatible with the Indigo Igloo one, expands the RotorS capabilities by considering the Crazyflie 2.0 physical model, its flight control system and the Crazyflie's on-board IMU, as well. A simple case study has been considered in order to show how the package works and how the dynamical model interacts with the control architecture of the quadcopter. The contribution can be also considered as a reference guide for expanding the RotorS functionalities in the UAVs field, by facilitating the integration of new aircrafts. We released the software as open-source code, thus making it available for scientific and educational activities.}
}

@INPROCEEDINGS{Silano2018MetroAgriFor,
 author      = {P. Daponte and De Vito, L. and L. Glielmo and L. Iannelli and D. Liuzza and F. Picariello and G. Silano},
 booktitle   = {2018 1st Workshop - Metrology for Agriculture and Foresty (MetroAgriFor)},
 title       = {{A review on the use of drones for precision agriculture}},
 year        = {2018},
 pages       = {1-11},
 group	     = {conferences},
 doi         = {10.1088/1755-1315/275/1/012022},
 ISSN	     = {1755--1315},
 month	     = {10},
 preprint    = {publications/metroagrifor18.pdf},
 link        = {https://iopscience.iop.org/article/10.1088/1755-1315/275/1/012022},
 note        = {Ancona, Italy},
 abstract    = {In recent years, there has been a strong activity in the so-called precision agriculture, particularly the monitoring aspect, not only to improve productivity, but also to meet demand of a growing population. At a large scale, precise monitoring of cultivated fields is a quite challenging task. Therefore, this paper aims to propose a survey on techniques, applied to precision agriculture monitoring, through the use of drones equipped with multispectral, thermal and visible cameras. For each application, the main limitations are highlighted and the parameters to be considered before to perform a flight are reported.}
}

@INPROCEEDINGS{Silano2018MED,
 author      = {G. Silano and E. Aucone and L. Iannelli},
 booktitle   = {2018 26th Mediterranean Conference on Control and Automation (MED)},
 title	     = {{CrazyS: A Software-In-The-Loop Platform for the Crazyflie 2.0 Nano-Quadcopter}},
 year	     = {2018},
 pages	     = {352--357},
 group	     = {conferences},
 doi	     = {10.1109/MED.2018.8442759},
 ISSN	     = {2473-3504},
 month	     = {6},
 preprint    = {publications/med18.pdf},
 link        = {https://ieeexplore.ieee.org/document/8442759},
 code        = {http://github.com/gsilano/CrazyS},
 note        = {Zadar, Croatia},
 abstract    = {In this paper we propose CrazyS, an extension of the ROS (Robot Operating System) package RotorS, aimed to modeling, developing and integrating the Crazyflie 2.0 nano-quadcopter in the physics based simulation environment Gazebo. Such simulation platform allows to understand quickly the behavior of the flight control system by comparing and evaluating different indoor and outdoor scenarios, with a details level quite close to reality. The proposed extension expands RotorS capabilities by considering the Crazyflie 2.0 physical model and its flight control system, as well. A simple case study  has been considered in order to show how the package works. The use of open-source software makes the platform available for scientific and educational activities.}
}

@INPROCEEDINGS{Silano2017SIDRA,
 author      = {G. Silano and L. Iannelli},
 booktitle   = {SIDRA (Italian Society of Automatic Control), National Meeting},
 title	     = {{An educational simulation platform for Unmanned Aerial Vehicles aimed to detect and track moving objects}},
 year	     = {2017},
 group	     = {posters},
 doi	     = {10.13140/RG.2.2.14878.43849},
 month	     = {9},
 preprint    = {publications/automaticaIT_2017.pdf},
 code        = {http://github.com/gsilano/MAT-Fly},
 note        = {Milan, Italy},
 abstract    = {The main motivation of this work is to show, for educational purposes, that the visual based object tracking problem can be illustrated through the simulation-in-the-loop approach: by using the MathWorks Virtual Reality Toolbox together with Matlab, it is possible to simulate the behavior of a drone in a 3D environment when detection and control algorithms are run. Matlab VR is used due to the familiarity that students have with. In this way the attention can be moved to the classifier, the references generator and the trajectory tracking control. Each block is decoupled and independent, so it can be easily replaced with others thus simplifying the development phase.}
}

@INPROCEEDINGS{Silano2016CCA,
 author      = {G. Silano and L. Iannelli},
 booktitle   = {2016 IEEE Conference on Control Applications (CCA)},
 title       = {{An educational simulation platform for GPS-denied unmanned Aerial Vehicles aimed to the detection and tracking of moving objects}},
 year        = {2016},
 pages       = {1018-1023},
 group	     = {conferences},
 doi	     = {10.1109/CCA.2016.7587947},
 month	     = {9},
 preprint    = {publications/cca16.pdf},
 link 	     = {https://ieeexplore.ieee.org/document/7587947},
 note        = {Buenos Aires, Argentina},
 abstract    = {The main motivation of this work is to show, for educational purposes, that the visual based object tracking problem can be illustrated through the simulation-in-the-loop approach: by using the MathWorks Virtual Reality Toolbox together with Matlab, it is possible to simulate the behavior of a drone in a 3D environment when detection and control algorithms are run. Matlab VR is used due to the familiarity that students have with. In this way the attention can be moved to the classifier, the references generator and the trajectory tracking control. Each block is decoupled and independent, so it can be easily replaced with others thus simplifying the development phase.}
}
